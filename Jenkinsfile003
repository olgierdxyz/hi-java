#!/usr/bin/env groovy

/*
    // Adjust Gradle's version:
    VERSION="$(curl -sSL https://services.gradle.org/versions/current |jq -r '.version')"
    gradlew wrapper --gradle-version "$VERSION"
    gradlew wrapper --version
*/

pipeline {
    /*
    agent {
        // Select a node with a label 'deb' and then run a docker container within it based on specified image
        docker {
            label 'deb'
            image 'olgierdxyz/ubi8-micro-git-jdk17'
        }
    }
    */
    /*
    // Select a node with a label 'deb' and then build an image from Dockerfile <skipDefaultCheckout() must be disabled otherwise you will have no Dockerfile at this stage checked out yet> and then run corresponding container and continue within it with the pipeline
    agent {
        dockerfile {
            label 'deb'
            filename 'Dockerfile'
        }
    }
    */
    agent {
        docker 'my-ubi8-micro-git-jdk17'
            //image 'olgierdxyz/ubi8-micro-git-jdk17'
            //filename 'Dockerfile'


    }

    triggers {
        githubPush()    // Remember not to add any special characters, including "-" in the name of Jenkinsfile "Script path"'s definition. Jenkinsfile001 is ok but not Jenkinsfile-001
    }
    options {
        timeout(time: 1, unit: 'MINUTES')
        quietPeriod(0)
        retry(0)
        disableConcurrentBuilds abortPrevious: true
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5'))
        skipDefaultCheckout()   // Critical command!!!
        skipStagesAfterUnstable()
        timestamps()
        ansiColor('xterm')
    }
    environment {
        JAVA_HOME = sh(returnStdout: true, script: 'dirname $(dirname $(readlink -f /usr/bin/java))').trim()    // It's java home within docker container!
        PATH = "${JAVA_HOME}/bin:${PATH}"
    }
    stages {

        stage ('######## Prepare environment ########') {
            steps {
                cleanWs deleteDirs: true, disableDeferredWipeout: true        // "disableDeferredWipeout: true" - critical option! Note that if skipDefaultCheckout() is enabled then you don't want cleanWs here!!!
                checkout scm                                                  // Critical command!!!
            }
        }

        stage ('######## Build application ########') {
            steps {
                sh 'chmod u+x gradlew'
                sh './gradlew build'

            }
        }
    }
}
